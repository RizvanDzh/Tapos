@use '@tapos/shared/styles' as styles;

:host {
  width: 360px;
  padding: 20px;
  margin: 0 auto;
  background-color: #303340;
  border-radius: 10px;
}


.form {
  display: flex;
  flex-direction: column;
  gap: 20px;

  &-field {
    display: flex;
    flex-direction: column;
    gap: 4px;

    &--small {
      width: 50%;
    }
  }

  &-field-inline-group {
    display: flex;
    gap: 10px;
  }

  &-field label {
    @include styles.font-style($font-weight: 400, $font-size: 16px);
  }

  &-field input {
    padding: 10px 8px;
    border-radius: 2px;

    &::placeholder {
      @include styles.font-style($font-weight: 300, $font-size: 14px, $color: #303340);
    }
  }

  &-field select {
    min-height: 39px;
  }

  &-fieldset {
    border-radius: 4px;
    padding: 12px 12px 30px 12px;
    display: flex;
    flex-direction: column;
    gap: 20px;
  }

  &-button-save {
    @include styles.font-style($font-weight: 600, $font-size: 16px, $color: var(--prizm-palette-0-dark));
    border-radius: 4px;
    border: none;
    padding: 6px;
    background-color: var(--prizm-palette-orange-400-light);
    cursor: pointer;
  }
}

.ng-valid.ng-dirty:not([ngModelGroup]):not(form) {
  border: 2px solid var(--prizm-palette-green-600-light);
}

.ng-invalid.ng-dirty:not([ngModelGroup="address"]):not(form) {
  border: 1px solid var(--prizm-palette-red-600-light);
}


button[disabled] {
  background-color: var(--prizm-palette-gray-h850-light) !important;
  pointer-events: none;
}

@keyframes input-animation {
  from {
    opacity: 0;
    transform: translateY(-6px);
  }

  to {
    opacity: 1;
    transform: translateY(0px);
  }
}

@mixin input-message {
  font-size: 12px;
  animation-name: input-animation;
  animation-duration: 300ms;
}

.input-error {
  color: var(--prizm-palette-red-600-light);
  @include input-message;
}

.input-info {
  color: var(--prizm-palette-blue-600-light);
  @include input-message;
}
