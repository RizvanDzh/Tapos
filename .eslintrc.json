{
    "root": true,
    "ignorePatterns": ["**/*"],
    "plugins": ["@nx"],
    "overrides": [
        {
            "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
            "rules": {
                "@nx/enforce-module-boundaries": [
                    "error",
                    {
                        "enforceBuildableLibDependency": true,
                        "allow": [],
                        "depConstraints": [
                            {
                                "sourceTag": "*",
                                "onlyDependOnLibsWithTags": ["*"]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "files": ["*.ts", "*.tsx"],
            "extends": ["plugin:@nx/typescript"],
            "rules": {
                "no-console": "warn",
                // Require explicit return types on functions and class methods.
                "@typescript-eslint/explicit-function-return-type": [
                    "error",
                    {
                        // Whether to ignore function expressions (functions which are not part of a declaration).
                        "allowExpressions": true
                    }
                ],
                // Disallow explicit type declarations for variables or parameters initialized to a number, string, or boolean.
                "@typescript-eslint/no-inferrable-types": "off",
                "@typescript-eslint/no-explicit-any": "error",
                "@typescript-eslint/no-for-in-array": "error",
                "@typescript-eslint/no-empty-function": "error",
                "@typescript-eslint/no-empty-interface": "error",
                "@typescript-eslint/ban-ts-comment": [
                    "error",
                    {
                        "ts-ignore": "allow-with-description"
                    }
                ],
                "@typescript-eslint/typedef": [
                    "error",
                    {
                        "parameter": true,
                        "variableDeclaration": true,
                        "propertyDeclaration": true,
                        "memberVariableDeclaration": true,
                        "arrowParameter": true
                    }
                ],
                "@typescript-eslint/explicit-member-accessibility": [
                    "error",
                    {
                        "accessibility": "explicit",
                        "overrides": {
                            "accessors": "explicit",
                            "constructors": "off",
                            "methods": "explicit",
                            "properties": "explicit",
                            "parameterProperties": "explicit"
                        },
                        "ignoredMethodNames": [
                            "ngOnInit",
                            "ngOnChanges",
                            "ngAfterViewInit",
                            "ngAfterContentInit",
                            "ngAfterViewChecked",
                            "ngAfterContentChecked",
                            "ngOnDestroy"
                        ]
                    }
                ],
                "@typescript-eslint/naming-convention": [
                    "error",
                    {
                        "selector": "memberLike",
                        "modifiers": ["private"],
                        "format": ["camelCase"],
                        "leadingUnderscore": "require"
                    },
                    {
                        "selector": "memberLike",
                        "modifiers": ["public"],
                        "format": ["camelCase"]
                    },
                    {
                        "selector": ["class", "typeAlias"],
                        "format": ["PascalCase"]
                    },
                    {
                        "selector": "interface",
                        "format": ["PascalCase"],
                        "custom": {
                            "regex": "^I[A-Z]",
                            "match": true
                        }
                    },
                    {
                        "selector": "enum",
                        "format": ["PascalCase"],
                        "custom": {
                            "regex": "^E[A-Z]",
                            "match": true
                        }
                    }
                ],
                "@typescript-eslint/array-type": [
                    "error",
                    {
                        "default": "array"
                    }
                ]
            }
        },
        {
            "files": ["*.js", "*.jsx"],
            "extends": ["plugin:@nx/javascript"],
            "rules": {}
        },
        {
            "files": ["*.spec.ts", "*.spec.tsx", "*.spec.js", "*.spec.jsx"],
            "env": {
                "jest": true
            },
            "rules": {}
        }
    ]
}
